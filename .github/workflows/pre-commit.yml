name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-20.04'
        python-version:
          - '3.8'
        arch:
          - 'x86_64'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Install Dependencies
      run: |
        apt-get update && apt-get install python3 && apt-get install python3-pip
        apt-get -y install autoconf automake build-essential cmake pkg-config llvm-dev
        python3 -m pip install --upgrade pip
        python3 setup.py install 
        pip install -e '.[MongoTrials, SparkTrials, ATPE, dev]'
        pip install pyspark
        python -m pytest ./hyperopt/tests/unit
        PYSPARK_PIN_THREAD=true pytest hyperopt/tests/integration/test_spark.py
        PYSPARK_PIN_THREAD=false pytest hyperopt/tests/integration/test_spark.py

  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                apt-get update && apt-get install -y python3 && apt-get install -y python3-pip && \
                apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config llvm-dev && \
                python3.8 -m pip install --upgrade pip && \
                python3.8 --version && \
                uname -m && \
                python3.8 setup.py install && \
                pip install -e '.[MongoTrials, SparkTrials, ATPE, dev]' && \
                pip install pyspark && \
                python -m pytest ./hyperopt/tests/unit && \
                PYSPARK_PIN_THREAD=true pytest hyperopt/tests/integration/test_spark.py && \
                PYSPARK_PIN_THREAD=false pytest hyperopt/tests/integration/test_spark.py && \
                deactivate'
